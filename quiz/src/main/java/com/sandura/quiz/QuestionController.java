package com.sandura.quiz;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.ArrayList;
import java.util.Date;

@Controller // This means that this class is a Controller
//@RequestMapping(path = "/demo") // This means URL's start with /demo (after Application path)
public class QuestionController {

    private static final Logger log = LoggerFactory.getLogger(QuestionController.class);

    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private QuestionRepository questionRepository;

    @PostMapping(path = "/add") // Map ONLY POST Requests
    public @ResponseBody
    String addNewUser(@RequestParam String title
            , @RequestParam String description) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Questions n = new Questions();
        n.setTitle(title);
        n.setDescription(description);
        questionRepository.save(n);

        log.info("Saving Question " + n + " in the database.");

        return "Saved";
    }

    @GetMapping(path = "/all")
    public @ResponseBody
    Iterable<Questions> getAllUsers() {
        // This returns a JSON or XML with the users
        log.info("Returning all users");

        return questionRepository.findAll();
    }

    @GetMapping(path = "/generate-data")
    private void generateNewDummyDataQuestion() {
        ArrayList<Questions> questions = new ArrayList<>();
        questionRepository.saveAll(questions);
    }

    @RequestMapping("/greeting")
    public String greeting(@RequestParam(value = "name", defaultValue = "World") String name, Model model) {
        model.addAttribute("name", name);
        return "greeting";
    }
}
